"use client";

import { useState, useEffect } from "react";
// libs
import Head from "next/head";
// types
import type { Blog } from "@/app/types";
// components
import BlogItem from "@/components/BlogItem";
import PageTitle from "@/components/PageTitle";

export default function Blog() {
  const [blogs, setBlogs] = useState<Blog[]>([]);
  const [searchQuery, setSearchQuery] = useState("");

  useEffect(() => {
    const fetchBlogs = async () => {
      try {
        const res = await fetch("http://localhost:5001/blogs");
        const data: Blog[] = await res.json();
        setBlogs(data);
      } catch (error) {
        console.error("Error fetching blogs:", error);
      }
    };

    fetchBlogs();
  }, []);

  const filteredBlogs = blogs.filter((blog) =>
    blog.title.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Store - Blog" />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            {/* Main Blog List */}
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {filteredBlogs.length > 0 ? (
                  filteredBlogs.map((blog) => (
                    <BlogItem key={blog.id} blog={blog} />
                  ))
                ) : (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>

            {/* Sidebar with Search and Categories */}
            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                {/* Search Form */}
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={(e) => e.preventDefault()}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                  />
                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                {/* Categories */}
                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>
                  <ul>
                    {[
                      "Fashion",
                      "Beauty",
                      "Street Style",
                      "Life Style",
                      "DIY & Crafts",
                    ].map((category) => (
                      <li key={category} className="bor18">
                        <button className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4">
                          {category}
                        </button>
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
